openapi: 3.0.0
info:
  title: Community Model API
  description:
    API for accessing data generated by the Community Model, for updating
    user data used by the Community Model for finding communities and for inserting new perspectives.
  contact:
    email: gjimenez@ucm.es
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v.1.1
servers:
  - url: /v1.1/
tags:
  - name: Config Tool
    description: Configuration Tool App
  - name: Perspectives
    description: Operations related to computing perspectives among communities.
  - name: Communities
    description: Operations related to information about communities.
  - name: Users
    description: Operations related to users in communities.
  - name: Similarity
    description: Operations about computing similarity among communities.
  - name: Jobs monitor
    description: Monitor the status of a job.
paths:
  /seed:
    get:
      tags:
        - Config Tool
      summary: Get seed
      description: Returns seed config file used by Configuration Tool.
      operationId: getSeed
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/seedFile.yaml#/seedFile"
        "400":
          description: invalid seed id
      x-swagger-router-controller: DataInput
  /jobs/{jobId}:
    get:
      tags:
        - Jobs monitor
      summary: Job status
      description: Monitor the status of a job. Shows if the status of the job is finished or in progress, and returns data if it is finished. User agent should send periodically /Get requests to check the completion status of the job.
      operationId: none
      parameters:
        - name: jobId
          in: path
          description: ID of the job to monitor
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/jobs.yaml#/jobId"
      responses:
        "200":
          description: Job status
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "./openapi_specs/jobs.yaml#/jobStarted"
                  - $ref: "./openapi_specs/jobs.yaml#/jobCompleted"
        "400":
          description: Job does not exist
      x-content-type: application/json
  /perspectives:
    get:
      tags:
        - Perspectives
      summary: Get all perspectives in the model.
      description: Returns a list of the perspectives in the community model. If the CM update is necessary returns a job.
      operationId: getPerspectives
      responses:
        "200":
          description: A list with the perspectives in the model.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./openapi_specs/perspective.yaml#/perspective"
                x-content-type: application/json
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/jobs.yaml#/job"
        "400":
          description: Community model does not exist
      x-swagger-router-controller: Perspectives
  /perspectives/{perspectiveId}:
    get:
      tags:
        - Perspectives
      summary: Get one perspective
      description: Returns Information about a perspective. If the CM update is necessary returns a job.
      operationId: getPerspectiveById
      parameters:
        - name: perspectiveId
          in: path
          description: ID of perspective to return
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/perspective.yaml#/perspective"
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/jobs.yaml#/job"
        "400":
          description: invalid perspective id
      x-swagger-router-controller: Perspectives
  /perspectives/{perspectiveId}/communities:
    get:
      tags:
        - Perspectives
      summary: Communities with the same perspective
      description: Returns a list with the communities. If the CM update is necessary returns a job.
      operationId: listPerspectiveCommunities
      parameters:
        - name: perspectiveId
          in: path
          description: ID of the perspective to return
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/jobs.yaml#/job"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./openapi_specs/community.yaml#/community"
                x-content-type: application/json
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/jobs.yaml#/job"
        "400":
          description: invalid community id
      x-swagger-router-controller: Perspectives
  /perspective:
    post:
      tags:
        - Perspectives
      summary: Add perspective
      description: Injects new perspectives in the CM. Checks if perspectives with the same id already exist. Creates the need to update the CM.
      operationId: PostPerspective
      requestBody:
        description: Perspective
        content:
          application/json:
            schema:
              $ref: "./openapi_specs/perspective.yaml#/perspective"
        required: true
      responses:
        "204":
          description: Added
        "400":
          description: error
      x-swagger-router-controller: Perspectives
  /communities:
    get:
      tags:
        - Communities
      summary: Get all communities in the model
      description: Access to a list of the communities in the community model. If the CM update is necessary returns a job.
      operationId: getCommunities
      responses:
        "200":
          description: A list with the communities in the model
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./openapi_specs/community.yaml#/community"
                x-content-type: application/json
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/jobs.yaml#/job"
        "400":
          description: Community model does not exist
      x-swagger-router-controller: Communities
  /communities/{communityId}:
    get:
      tags:
        - Communities
      summary: Get community description and explanation
      description: Returns information about a community. If the CM update is necessary returns a job.
      operationId: getCommunityById
      parameters:
        - name: communityId
          in: path
          description: ID of community to return
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/community.yaml#/community"
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/jobs.yaml#/job"
        "400":
          description: invalid community id
      x-swagger-router-controller: Communities
  /communities/{communityId}/users:
    get:
      tags:
        - Communities
      summary: Users who belong to a community
      description: Returns a list with the ids of the users who belong to a community. If the CM update is necessary returns a job.
      operationId: listCommunityUsers
      parameters:
        - name: communityId
          in: path
          description: ID of community to return
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./openapi_specs/schemas.yaml#/id"
                x-content-type: application/json
        "202":
          description: Job accepted. Updating CM before returning requested data. Redirecting to jobs monitor
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/jobs.yaml#/job"
        "400":
          description: invalid community id
      x-swagger-router-controller: Communities
  /users/{userId}/communities:
    get:
      tags:
        - Users
      summary: Communities that a user belongs
      description: Returns a list with the ids of the communities that the user belongs to.
      operationId: listUserCommunities
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./openapi_specs/schemas.yaml#/id"
                x-content-type: application/json
        "400":
          description: invalid user id
      x-swagger-router-controller: Users
  /users/{userId}/update-generated-content:
    post:
      tags:
        - Users
      summary: Update community model with new user generated content
      description: This service is employed to inform the CM the users who were created/updated in the User Model.
      operationId: updateUsers
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
      requestBody:
        description: A list with objects that represent the information about the user that will be added to the community model
        content:
          application/json:
            schema:
              type: array
              description:
                A list of user generated content objects for the Community
                Model
              items:
                $ref: "./openapi_specs/user-generated-content.yaml#/user-generated-content"
        required: true
      responses:
        "204":
          description: Updated
        "400":
          description: Invalid userId userId in the URL differs form the userid in the body request
      x-swagger-router-controller: Users
  /communities/{communityId}/similarity:
    get:
      tags:
        - Similarity
      summary: K-most similar communities
      description: Returns a list with the k most similar communities to the chosen one in the model.
      operationId: computeKmostSimilar
      parameters:
        - name: communityId
          in: path
          description: ID of the target community to compute similarity
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
        - name: k
          in: query
          description: Size of the result (k most similar communities)
          required: true
          style: form
          explode: true
          schema:
            minimum: 1
            type: integer
      responses:
        "200":
          description: A list with the similarity scores between the parameter community and the k-most similar communities, in descending order
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./openapi_specs/similarityScore.yaml#/similarityScore"
                x-content-type: application/json
        "400":
          description: Invalid communityId or query parameters
      x-swagger-router-controller: Similarity
  /communities/{communityId}/similarity/{otherCommunityId}:
    get:
      tags:
        - Similarity
      summary: Similarity between two communities
      description: Returns a similarity score between two communities.
      operationId: computeSimilarity
      parameters:
        - name: communityId
          in: path
          description: ID of the target community to compute similarity
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
        - name: otherCommunityId
          in: path
          description: ID of the other community to compute similarity
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
      responses:
        "200":
          description: A similarity score object between targetCommunity and otherCommunity
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/similarityScore.yaml#/similarityScore"
        "400":
          description: Invalid communityIds (target or other)
      x-swagger-router-controller: Similarity
  /communities/{communityId}/dissimilarity:
    get:
      tags:
        - Similarity
      summary: K-most dissimilar communities
      description: Returns a list with the k most dissimilar communities to the chosen one in the model.
      operationId: computeKmostDissimilar
      parameters:
        - name: communityId
          in: path
          description: ID of the target community to compute dissimilarity
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
        - name: k
          in: query
          description: Size of the result (k most dissimilar communities)
          required: true
          style: form
          explode: true
          schema:
            minimum: 1
            type: integer
      responses:
        "200":
          description: A list with the dissimilarity scores between the parameter community and the k-most dissimilar communities, in descending order
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./openapi_specs/similarityScore.yaml#/similarityScore"
                x-content-type: application/json
        "400":
          description: Invalid community-id or query parameters
      x-swagger-router-controller: Similarity
  /communities/{communityId}/dissimilarity/{otherCommunityId}:
    get:
      tags:
        - Similarity
      summary: Dissimilarity between two communities
      description: Returns the dissimilarity score between two communities
      operationId: computeDissimilarity
      parameters:
        - name: communityId
          in: path
          description: ID of the target community to compute dissimilarity
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
        - name: otherCommunityId
          in: path
          description: ID of the other community to compute dissimilarity
          required: true
          style: simple
          explode: false
          schema:
            $ref: "./openapi_specs/schemas.yaml#/id"
      responses:
        "200":
          description: The dissimilarity score object between targetCommunity and otherCommunity
          content:
            application/json:
              schema:
                $ref: "./openapi_specs/similarityScore.yaml#/similarityScore"
        "400":
          description: Invalid community-ids (target or other)
      x-swagger-router-controller: Similarity
components:
  schemas:
    $ref: "./openapi_specs/schemas.yaml"
